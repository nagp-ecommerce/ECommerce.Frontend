name: Build and Push Docker Image for ecommerce Frontend 

on:
  push:
    branches:
      - master
  workflow_dispatch: 

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN   }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build Docker Image
        run: docker build -t ghcr.io/${{ github.repository_owner }}/ecom-frontend:latest .

      - name: Push Docker Image to GHCR
        run: docker push ghcr.io/${{ github.repository_owner }}/ecom-frontend:latest

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      # - name: Add new image to AWS ECS Task Definition
      #   id: task-def
      #   uses: aws-actions/amazon-ecs-render-task-definition@v1
      #   with:
      #     task-definition: task-definition.json
      #     container-name: my-container
      #     image: ghcr.io/${{ github.repository_owner }}/ecom-frontend:latest

      # - name: Deploy updated task definition
      #   uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      #   with:
      #     task-definition: ${{ steps.render-task.outputs.task-definition }}
      #     service: ecom-frontend-service
      #     cluster: NagpDevCluster
      #     wait-for-service-stability: true
    
      # - name: Deploy to ECS
      #   run: |
      #     aws ecs update-service --cluster NagpDevCluster --service ecom-frontend-service --force-new-deployment
